#include <iostream>
#include <cmath>
using namespace std;

int main() {
    string text = "Informationsentropi är ett mått på osäkerheten i ett visst system,"
                  " i synnerhet oförutsägbarheten i utseendet på en symbol för det primära alfabetet."
                  " I det senare fallet, i frånvaro av informationsförlust, är entropin numeriskt"
                  " lika med mängden information per symbol för det överförda meddelandet. Till exempel"
                  " i sekvensen av bokstäver som utgör en mening på ryska, olika bokstäver visas med"
                  " olika frekvenser, så osäkerheten i utseendet för vissa bokstäver är mindre än för andra."
                  " Om vi anser att vissa kombinationer av bokstäver är mycket sällsynta, minskar osäkerheten ännu mer.";

    string X[31] = {" ", "e", "r", "t", "n", "s", "i", "a", "o", "m", "k", "ä", "v", "l", "d", "f", "b", "ö", "p", "u",
                    "y", ",", "å", "h", ".", "g", "l", "x", "T", "c", "O"};
    float P[31] = {0.150, 0.100, 0.074, 0.072, 0.068, 0.065, 0.05, 0.05, 0.041, 0.037, 0.029, 0.029, 0.027, 0.025,
                   0.024, 0.024, 0.015, 0.015, 0.013, 0.012, 0.012, 0.010, 0.010, 0.008, 0.006, 0.006, 0.003, 0.001,
                   0.001, 0.001, 0.001};
    float I[31];
    float H = 0;

    //Считаем информацию
    for (int i = 0; i < 31; i++) {
        I[i] = -log(P[i]) / log(2);
    }

    //Считаем энтропию по Шеннону
    for (int i = 0; i < 31; i++) {
        H = H + P[i] * I[i];
    }

    //Закодируем каждый символ
    string code[31] = {"110", "010", "1110", "1011", "1010", "1000", "0011", "0010", "11111", "10011", "01111", "01110",
                       "01101", "00011", "00010", "00001", "100101", "100100", "011001", "000001", "000000", "1111011",
                       "1111010", "1111000", "0110001", "0110000", "11110010", "1111001111", "1111001110", "1111001101",
                       "1111001100"};

    //Выведем текст
    cout << "Исходный текст:" << endl;
    cout << text << endl << endl;

    //Выведем символы, частоты, информацию и энтропию в порядке убывания
    cout << "Выведем в порядке убывания символы, частоты, информации и код:" << endl;
    for (int i = 0; i < 31; i++) {
        cout << X[i] << " - " << P[i] << " - " << I[i] << " - " << code[i] << endl;
    }

    cout << endl;
    cout << "Энтропия равна: " << H << endl << endl;
    cout << "После получения кодов для каждого символа исходный код будет выглядеть следующим образом:" << endl;

    string text_code = "1111001010100000111111111010011001010110011111111010"
                       "1000010101010111110111110110010011110011101110110010"
                       "1011101111010011111101010111011110011001111101011011"
                       "1111000011100111101011101111000010101101010101100011"
                       "1100101011101111001101001110001000101111010000000001"
                       "0001011010100111111011110001111010000000001010101001"
                       "0111011110000101011110111110000110010011100000011011"
                       "1000011100110000100101001011101111000010101101010101"
                       "1000111100000011011100001001010100001001010111100110"
                       "0111110101100101010110100000000010011100101111110001"
                       "1110000011001001110110000100101011110011001111000111"
                       "0011011101110001011000100001100001001010010101010110"
                       "1010110110001110111100101100001001010111101000010101"
                       "0001011100101100000100100001100011010101111110111100"
                       "0111100000111101111010101001101001011101111111000100"
                       "1101110001110100000111111111010011001010110011111111"
                       "0101000000011001001110000110000011000101111110111100"
                       "1110111011001010101011111011111011001001110101101010"
                       "0000011001101011100011100001111101111000011001101111"
                       "0010110100110100001011010011011101010011000000010010"
                       "1010110001110100000111111111010011001010110011111111"
                       "0101100110010101110110100000000010011100101111110001"
                       "1110000011001001110110000100101011110100100011010101"
                       "1100000110010011100001000101101001101000010000100100"
                       "0011001010100001001010110110001110111100111000110001"
                       "1000111100101111001111010100110110010100001111000111"
                       "1010000100111101101010101010000101010110001001101110"
                       "1001011111101111100010110111001101010111011010001111"
                       "1100111100000011011011000010010011101100101010110100"
                       "1101010100011101001100001100110011111010110111000000"
                       "0100001111001011110111101111100011001101111001011010"
                       "0101111110111110001011011100110101011101100110100111"
                       "0000010100011010011010000101101111100011001101111001"
                       "0110000011110010011110110101010101000010111011110111"
                       "1010001111010110111111000011100111101011101111000010"
                       "1011010101011000111100000011011100001001010100001001"
                       "0101111000001100100111011001101001110001000001011010"
                       "0101111110111110001011011100110101011101100111011101"
                       "1010011001110100001011100101100111010101100000110010"
                       "0111011000101010000101110001001100011101111001100100"
                       "1111001101001111000101010100001011101100010101110111"
                       "1001101001110001000001011001111111111001110010100111"
                       "0100010101100111111110100101110110001001101110100101"
                       "1111101111100010110111001101010111011001110111011010"
                       "0110000001111001101011110101011110100001110000110001"
                       "1100000000010101011001011110111101001100111010100001"
                       "1110010111011011111100001110011110101110111100001010"
                       "11010101011001110101010100000011101001101011100110001";

    cout << text_code << endl << endl;

    cout << "Средняя длина кода равна:";

    float l = (2 * 3 + 6 * 4 + 8 * 5 + 5 * 6 + 5 * 7 + 1 * 8 + 4 * 10) / 31;
    cout << l << endl << endl;

    cout << "Фактор сжатия:";

    float n;
    n = l / H;
    cout << n << endl << endl;

    cout << "Дисперсия кода: ";
    //Длина каждого кода
    int s[31] = {3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 10, 10, 10, 10};
    float sigma = 0;

    for (int i = 0; i < 31; i++) {
        sigma = sigma + P[i] * (s[i] - l) * (s[i] - l);
    }

    cout << sigma << endl << endl;

    cout << "После декодирования мы получаем исходный код:" << endl;
    cout << text;

    return 0;
}
